#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// List of keywords
const char *keywords[] = {
    "int", "float", "if", "else", "while", "for", "return", "char", "double", "void"
};
const int keywordCount = sizeof(keywords) / sizeof(keywords[0]);

// Function to check if a string is a keyword
int isKeyword(const char *word) {
    for (int i = 0; i < keywordCount; i++) {
        if (strcmp(word, keywords[i]) == 0) {
            return 1;
        }
    }
    return 0;
}

// Function to check if a character is an operator
int isOperator(char ch) {
    return (ch == '+' || ch == '-' || ch == '*' || ch == '/' || ch == '=' ||
            ch == '<' || ch == '>' || ch == '!' || ch == '&' || ch == '|');
}

// Function to check if a string is a valid identifier
int isIdentifier(const char *word) {
    if (!isalpha(word[0]) && word[0] != '_') {
        return 0;
    }
    for (int i = 1; word[i] != '\0'; i++) {
        if (!isalnum(word[i]) && word[i] != '_') {
            return 0;
        }
    }
    return 1;
}

// Function to perform lexical analysis on a given file
void lexicalAnalysis(const char *filename) {
    FILE *file = fopen(filename, "r");
    if (file == NULL) {
        printf("Error: Could not open file '%s'\n", filename);
        exit(1);
    }

    char buffer[100];
    char ch;
    int index = 0;

    printf("Lexical Analysis:\n");
    while ((ch = fgetc(file)) != EOF) {
        if (isspace(ch) || isOperator(ch) || ch == '(' || ch == ')' || ch == ';' || ch == ',') {
            if (index > 0) {
                buffer[index] = '\0';
                if (isKeyword(buffer)) {
                    printf("Keyword: %s\n", buffer);
                } else if (isIdentifier(buffer)) {
                    printf("Identifier: %s\n", buffer);
                } else {
                    printf("Unknown token: %s\n", buffer);
                }
                index = 0;
            }
            if (isOperator(ch)) {
                printf("Operator: %c\n", ch);
            } else if (ch == '(' || ch == ')' || ch == ';' || ch == ',') {
                printf("Delimiter: %c\n", ch);
            }
        } else {
            buffer[index++] = ch;
        }
    }

    fclose(file);
}

int main() {
    char filename[100];
    printf("Enter the filename: ");
    scanf("%s", filename);

    lexicalAnalysis(filename);

    return 0;
}
